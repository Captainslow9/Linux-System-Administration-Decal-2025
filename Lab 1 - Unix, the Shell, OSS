PART 1: Shell spelunking

Q1. ssh into tsunami.ocf.berkeley.edu using your OCF account, or login at ssh.ocf.berkeley.edu
A1. I used my own VM

Q2. Run the following command to download the file we have provided: wget https://github.com/0xcf/decal-labs/raw/master/b1/b01.tgz
A2. Done

Q3. Go into the b01 directory. Make sure you’re in there by running pwd (Present working directory). What does pwd give you (conceptually)?
A3. /home/jsh/b01

Q4. There’s a hidden file in the b01 directory. What is the secret?
A4. hunter2

Q5. A malicious user made its way into my computer and created a message split across all the files in nonsense/. What does it say? How did you find the message?
A5. message : stanford > berkeley. I used command 'cat nonsense/*'.

Q6. Go ahead and delete everything in nonsense/ with one command. How did you do it?
A6. I used command 'rm -r nonsense'.

Q7. There’s a file in b01 called big_data.txt. It’s 80 megabytes worth of random text. For reference, Leo Tolstoy’s “War and Peace”, the novel with a whopping 57,287 words depicting the French invasion of Russia and the impact of the Napoleonic era on Tsarist society through the stories of five Russian aristocratic families with several chapters solely dedicated to philosophical prose, is only 3.2 megabytes large.
For that reason, I don’t recommend using cat to print the file. You can try it, but you’ll be sitting there for a while. There’s some text you need to find in there! Go find it without actually opening up the file itself!
Two lines above the only URL in the file is a secret solution. What is that solution?
Hints: What makes up a URL (https…)? What is Context Line Control?
A7. THE SOLUTION IS MORE COFFEE. I used command 'grep -B 2 "http" big_data.txt'.

Q8. Try executing ./a_script. You should get something back that says permission denied: ./a_script. This is because files have three different permissions: read, write, and execute. Which one does a_script need? Change the file permissions so that you can run the script. How did you do it?
A8. The file a_script contains one line:'echo "Hello World"', so it needs execute permission. I used 'chmod +x a_script' to make it executable.

Q9. Finally, there’s an empty file called hello_world in the directory. Write your name in it! How did you do it?
A9. I used nano.

PART 2: General Questions

Q1. What differentiates Linux/OSX from operating systems like Windows?
A1. Linux/macOS emphasize Unix principles, openness, security, and command‑line power. Windows emphasizes GUI usability, broad hardware support, and integrated commercial software.

Q2. What are some differences between the command line and normal (graphical) usage of an OS?
A2. In practice, on Linux/macOS, the CLI is essential for system administration. On Windows, most casual users rely on the GUI, but PowerShell brings CLI power closer to Unix‑like systems.

Q3. What is the root directory in Linux filesystems? Answer conceptually, as in depth as you would like.
A3. Definition: The root directory is the topmost directory in the Linux filesystem hierarchy. Represented by a single forward slash: /. All files and directories stem from /, forming a tree structure.

Q4. ls has a lot of cool arguments. Try using them to get extra information such as file permissions, owner name, owner group, file size, and late date edited. In addition, I want to be able to see the size and have the files ordered by last date edited, with the oldest files on top. How would I do this?
A4. I used command 'ls -lt'

Q5. Instead of showing the first 10 lines of the file big_data.txt, I want to use the head command to show the first 4. How would I do that?
A5. I used command 'head -4 big_data.txt'

Q6. What’s the difference between cat foo > out.txt and cat foo >> out.txt?
A6. 'cat foo > out.txt' takes the contents of foo and writes it to out.txt. 'cat foo >> out.txt' takes the contents of foo and appends it to the end of out.txt. In both cases, if out.txt does not exist, it will be created.

